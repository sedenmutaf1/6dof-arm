<?xml version="1.0" ?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robotic_arm">
    <!-- Specify some colours -->
    <material name="white">
        <color rgba="1 1 1 1" />
    </material>
    <material name="orange">
        <color rgba="1 0.3 0.1 1" />
    </material>
    <material name="blue">
        <color rgba="0.2 0.2 1 1" />
    </material>
    <material name="lucky">
        <color rgba="0.1 0.56 0.3 0.71" />
    </material>
    <material name="fuchsia">
        <color rgba="1 0 1 1" />
    </material>
    <!-- Specify some standard inertial calculations -->
    <!-- These make use of xacro's mathematical functionality -->
    <xacro:macro name="inertial_sphere" params="mass radius *origin">
        <inertial>
            <xacro:insert_block name="origin" />
            <mass value="${mass}" />
            <inertia ixx="${(2/5) * mass * (radius*radius)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * mass * (radius*radius)}" iyz="0.0" izz="${(2/5) * mass * (radius*radius)}" />
        </inertial>
    </xacro:macro>
    <xacro:macro name="inertial_box" params="mass x y z *origin">
        <inertial>
            <xacro:insert_block name="origin" />
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (y*y+z*z)}" ixy="0.0" ixz="0.0" iyy="${(1/12) * mass * (x*x+z*z)}" iyz="0.0" izz="${(1/12) * mass * (x*x+y*y)}" />
        </inertial>
    </xacro:macro>
    <xacro:macro name="inertial_cylinder" params="mass length radius *origin">
        <inertial>
            <xacro:insert_block name="origin" />
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (3*radius*radius + length*length)}" ixy="0.0" ixz="0.0" iyy="${(1/12) * mass * (3*radius*radius + length*length)}" iyz="0.0" izz="${(1/2) * mass * (radius*radius)}" />
        </inertial>
    </xacro:macro>
    <link name="world" />
    <!-- Base link -->
    <link name="base_link">
        <!-- Visual and collision definitions go here -->
        <!-- Example visual and collision definitions for a box -->
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="1 1 0.5" />
            </geometry>
            <material name="lucky" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0 0 0" />
            </geometry>
        </collision>
        <!-- Inertial properties for the base link -->
        <xacro:inertial_box mass="12" x="1" y="1" z="0.5">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:inertial_box>
        <inertial>
            <mass value="0.1" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="0.03" iyy="0.03" izz="0.03" ixy="0.0" ixz="0.0" iyz="0.0" />
        </inertial>
    </link>
    <!-- Link 1 -->
    <link name="link1">
        <!-- Visual and collision definitions go here -->
        <!-- Example visual and collision definitions for a cylinder -->
        <visual>
            <origin xyz="0 0 1" rpy="0 0 0" />
            <geometry>
                <cylinder length="1.5" radius="0.3" />
            </geometry>
            <material name="white" />
        </visual>
        <collision>
            <origin xyz="0 0 1" rpy="0 0 0" />
            <geometry>
                <cylinder length="0" radius="0" />
            </geometry>
        </collision>
        <!-- Inertial properties for link1 -->
        <xacro:inertial_cylinder mass="1.0" length="1.5" radius="0.3">
            <origin xyz="0 0 1" rpy="0 0 0" />
        </xacro:inertial_cylinder>
        <inertial>
            <mass value="0.1" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="0.03" iyy="0.03" izz="0.03" ixy="0.0" ixz="0.0" iyz="0.0" />
        </inertial>
    </link>
    <!-- Link 2 -->
    <link name="link2">
        <!-- Visual and collision definitions go here -->
        <!-- Example visual and collision definitions for a cylinder -->
        <visual>
            <origin xyz="1 0 0" rpy="0 1.5707 0" />
            <geometry>
                <cylinder length="2" radius="0.15" />
            </geometry>
            <material name="orange" />
        </visual>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <sphere radius="0.15" />
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="1.45 0 0" rpy="0 1.5707 0" />
            <geometry>
                <cylinder length="0" radius="0" />
            </geometry>
        </collision>
        <!-- Inertial properties for link2 -->
        <xacro:inertial_cylinder mass="1.0" length="2" radius="0.15">
            <origin xyz="1 0 0" rpy="0 1.5707 0" />
        </xacro:inertial_cylinder>
        <inertial>
            <mass value="0.1" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="0.03" iyy="0.03" izz="0.03" ixy="0.0" ixz="0.0" iyz="0.0" />
        </inertial>
    </link>
    <link name="link3">
        <!-- Visual and collision definitions go here -->
        <!-- Example visual and collision definitions for a cylinder -->
        <visual>
            <origin xyz="1 0 0" rpy="0 1.5707 0" />
            <geometry>
                <cylinder length="1.6" radius="0.15" />
            </geometry>
            <material name="blue" />
        </visual>
        <visual>
            <origin xyz="0.1 0 0" rpy="0 0 0" />
            <geometry>
                <sphere radius="0.15" />
            </geometry>
            <material name="blue" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 1.5707 0" />
            <geometry>
                <cylinder length="0" radius="0" />
            </geometry>
        </collision>
        <!-- Inertial properties for link2 -->
        <xacro:inertial_cylinder mass="1.0" length="1.6" radius="0.15">
            <origin xyz="0 0 0" rpy="0 1.5707 0" />
        </xacro:inertial_cylinder>
        <inertial>
            <mass value="0.1" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="0.03" iyy="0.03" izz="0.03" ixy="0.0" ixz="0.0" iyz="0.0" />
        </inertial>
    </link>
    <link name="link4">
        <!-- Visual and collision definitions go here -->
        <!-- Example visual and collision definitions for a cylinder -->
        <visual>
            <origin xyz="0.3 0 0" rpy="0 1.5707 0" />
            <geometry>
                <cylinder length="0.5" radius="0.15" />
            </geometry>
            <material name="fuchsia" />
        </visual>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <sphere radius="0.15" />
            </geometry>
            <material name="fuchsia" />
        </visual>
        <collision>
            <origin xyz="2.6 0 0" rpy="0 1.5707 0" />
            <geometry>
                <cylinder length="0" radius="0" />
            </geometry>
        </collision>
        <!-- Inertial properties for link2 -->
        <xacro:inertial_cylinder mass="1.0" length="0.5" radius="0.15">
            <origin xyz="2.6 0 0" rpy="0 1.5707 0" />
        </xacro:inertial_cylinder>
        <inertial>
            <mass value="0.1" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="0.03" iyy="0.03" izz="0.03" ixy="0.0" ixz="0.0" iyz="0.0" />
        </inertial>
    </link>
    <link name="link5">
        <!-- Visual and collision definitions go here -->
        <!-- Example visual and collision definitions for a cylinder -->
        <visual>
            <origin xyz="0 0.1 0" rpy="0 1.5707 0" />
            <geometry>
                <cylinder length="0.3" radius="0.04" />
            </geometry>
            <material name="fuchsia" />
        </visual>
        <visual>
            <origin xyz="0 -0.1 0" rpy="0 1.5707 0" />
            <geometry>
                <cylinder length="0.3" radius="0.04" />
            </geometry>
            <material name="fuchsia" />
        </visual>
        <collision>
            <origin xyz="2.6 0 0" rpy="0 1.5707 0" />
            <geometry>
                <cylinder length="0" radius="0." />
            </geometry>
        </collision>
        <!-- Inertial properties for link2 -->
        <xacro:inertial_cylinder mass="1.0" length="0.5" radius="0.15">
            <origin xyz="2.6 0 0" rpy="0 1.5707 0" />
        </xacro:inertial_cylinder>
        <inertial>
            <mass value="0.1" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="0.03" iyy="0.03" izz="0.03" ixy="0.0" ixz="0.0" iyz="0.0" />
        </inertial>
    </link>
    <!-- Base joint -->
    <joint name="base_joint" type="fixed">
        <parent link="world" />
        <child link="base_link" />
        <!-- Joint origin and axis definitions go here -->
        <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>
    <!-- Continuous joint -->
    <joint name="continuous_joint" type="continuous">
        <parent link="base_link" />
        <child link="link1" />
        <!-- Joint origin and axis definitions go here -->
        <origin xyz="0 0 0" rpy="0 0 0" />
        <axis xyz="0 0 1" />
        <limit velocity="100" effort="100" />
    </joint>
    <!-- Revolute joint -->
    <joint name="revolute_joint" type="revolute">
        <parent link="link1" />
        <child link="link2" />
        <!-- Joint origin and axis definitions go here -->
        <origin xyz="0 0 1.9" rpy="0 0 0" />
        <axis xyz="0 -1 0" />
        <limit lower="0" upper="3.1415" velocity="100" effort="100" />
    </joint>
    <joint name="revolute_joint2" type="revolute">
        <parent link="link2" />
        <child link="link3" />
        <!-- Joint origin and axis definitions go here -->
        <origin xyz="2 0 0" rpy="0 0 0" />
        <axis xyz="0 1 0" />
        <limit lower="0" upper="1.5707" velocity="100" effort="100" />
    </joint>
    <joint name="revolute_joint3" type="revolute">
        <parent link="link3" />
        <child link="link4" />
        <!-- Joint origin and axis definitions go here -->
        <origin xyz="1.8 0 0" rpy="0 0 0" />
        <axis xyz="1 0 0" />
        <limit lower="-1.5707" upper="0" velocity="100" effort="100" />
    </joint>
    <joint name="revolute_joint4" type="revolute">
        <parent link="link3" />
        <child link="link4" />
        <!-- Joint origin and axis definitions go here -->
        <origin xyz="1.8 0 0" rpy="0 0 0" />
        <axis xyz="0 1 0" />
        <limit lower="-1.5707" upper="0" velocity="100" effort="100" />
    </joint>
    <joint name="fixed_joint" type="fixed">
        <parent link="link4" />
        <child link="link5" />
        <!-- Joint origin and axis definitions go here -->
        <origin xyz="0.3 0 0" rpy="0 0 0" />
    </joint>
    <!-- ... (other joint and link definitions) ... -->
    <!-- Gazebo tags -->
    <!-- This file demonstrates the use of some <gazebo> tags -->
    <!-- To include it add the following line -->
    <!-- <xacro:include filename="example_gazebo.xacro" /> -->
    <!-- Gazebo material tags -->
    <gazebo reference="base_link">
        <material>Gazebo/Green</material>
        <plugin name="gazebo_ros_control">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>
    <gazebo reference="link1">
        <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="link2">
        <material>Gazebo/Orange</material>
    </gazebo>
    <gazebo reference="link3">
        <material>Gazebo/Red</material>
    </gazebo>
    <gazebo reference="link4">
        <material>Gazebo/Purple</material>
    </gazebo>
    <gazebo reference="link5">
        <material>Gazebo/Cyan</material>
    </gazebo>
    <!-- Gazebo plugin tags -->
    <!-- This plugin will publish the joint_states for the selected joints -->
    <!-- (which robot_state_publisher can then use to broadcast the appropriate tf). -->
     <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/robotic_arm</robotNamespace>
    </plugin>
  </gazebo>
    <gazebo>
        <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
            <update_rate>20</update_rate>
            <joint_name>continuous_joint</joint_name>
            <joint_name>revolute_joint</joint_name>
            <joint_name>revolute_joint2</joint_name>
            <joint_name>revolute_joint3</joint_name>
            <joint_name>revolute_joint4</joint_name>
        </plugin>
    </gazebo>
    <!-- This plugin will read a JointTrajectory message from the /set_joint_trajectory topic -->
    <!-- and move the machine accordingly. It's a bit clunky but it works. -->
    <!-- You'll probably want to add damping to the joints to stop them from flopping around. -->
    <!-- e.g. <dynamics damping="10.0" friction="10.0"/> -->
    <!-- Here's an example message to publish to test it: -->
    <!-- ros2 topic pub -1 /set_joint_trajectory trajectory_msgs/msg/JointTrajectory '{header: {frame_id: world}, joint_names: [continuous_joint, revolute_joint], points: [ {positions: [0.8, 0.6]} ]}' -->
    <gazebo>
        <plugin name="gazebo_ros_joint_pose_trajectory" filename="libgazebo_ros_joint_pose_trajectory.so">
            <update_rate>2</update_rate>
        </plugin>
    </gazebo>
    <transmission name="trans_continuous_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="continuous_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="continuous_joint_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_revolute_joint">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="revolute_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="revolute_joint_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_revolute_joint2">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="revolute_joint2">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="revolute_joint2_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_revolute_joint3">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="revolute_joint3">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="revolute_joint3_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="trans_revolute_joint4">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="revolute_joint4">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="revolute_joint4_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
</robot>

